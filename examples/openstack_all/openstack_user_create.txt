usage: openstack user create [-h] [-f {json,shell,table,value,yaml}]
                             [-c COLUMN] [--noindent] [--prefix PREFIX]
                             [--max-width <integer>] [--fit-width]
                             [--print-empty] [--domain <domain>]
                             [--project <project>]
                             [--project-domain <project-domain>]
                             [--password <password>] [--password-prompt]
                             [--email <email-address>]
                             [--description <description>]
                             [--ignore-lockout-failure-attempts]
                             [--no-ignore-lockout-failure-attempts]
                             [--ignore-password-expiry]
                             [--no-ignore-password-expiry]
                             [--ignore-change-password-upon-first-use]
                             [--no-ignore-change-password-upon-first-use]
                             [--enable-lock-password]
                             [--disable-lock-password]
                             [--enable-multi-factor-auth]
                             [--disable-multi-factor-auth]
                             [--multi-factor-auth-rule <rule>]
                             [--enable | --disable] [--or-show]
                             <name>

Create new user

positional arguments:
  <name>                New user name

options:
  -h, --help            show this help message and exit
  --domain <domain>     Default domain (name or ID)
  --project <project>   Default project (name or ID)
  --project-domain <project-domain>
                        Domain the project belongs to (name or ID). This can
                        be used in case collisions between project names
                        exist.
  --password <password>
                        Set user password
  --password-prompt     Prompt interactively for password
  --email <email-address>
                        Set user email address
  --description <description>
                        User description
  --ignore-lockout-failure-attempts
                        Opt into ignoring the number of times a user has
                        authenticated and locking out the user as a result
  --no-ignore-lockout-failure-attempts
                        Opt out of ignoring the number of times a user has
                        authenticated and locking out the user as a result
  --ignore-password-expiry
                        Opt into allowing user to continue using passwords
                        that may be expired
  --no-ignore-password-expiry
                        Opt out of allowing user to continue using passwords
                        that may be expired
  --ignore-change-password-upon-first-use
                        Control if a user should be forced to change their
                        password immediately after they log into keystone for
                        the first time. Opt into ignoring the user to change
                        their password during first time login in keystone
  --no-ignore-change-password-upon-first-use
                        Control if a user should be forced to change their
                        password immediately after they log into keystone for
                        the first time. Opt out of ignoring the user to change
                        their password during first time login in keystone
  --enable-lock-password
                        Disables the ability for a user to change its password
                        through self-service APIs
  --disable-lock-password
                        Enables the ability for a user to change its password
                        through self-service APIs
  --enable-multi-factor-auth
                        Enables the MFA (Multi Factor Auth)
  --disable-multi-factor-auth
                        Disables the MFA (Multi Factor Auth)
  --multi-factor-auth-rule <rule>
                        Set multi-factor auth rules. For example, to set a
                        rule requiring the "password" and "totp" auth methods
                        to be provided, use: "--multi-factor-auth-rule
                        password,totp". May be provided multiple times to set
                        different rule combinations.
  --enable              Enable user (default)
  --disable             Disable user
  --or-show             Return existing user

output formatters:
  output formatter options

  -f {json,shell,table,value,yaml}, --format {json,shell,table,value,yaml}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated to
                        show multiple columns

json formatter:
  --noindent            whether to disable indenting the JSON

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --prefix PREFIX       add a prefix to all variable names

table formatter:
  --max-width <integer>
                        Maximum display width, <1 to disable. You can also use
                        the CLIFF_MAX_TERM_WIDTH environment variable, but the
                        parameter takes precedence.
  --fit-width           Fit the table to the display width. Implied if --max-
                        width greater than 0. Set the environment variable
                        CLIFF_FIT_WIDTH=1 to always enable
  --print-empty         Print empty table if there is no data to show.
Could not clean up: 'ClientManager' object has no attribute 'session'
