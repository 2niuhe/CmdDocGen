usage: openstack network qos rule create [-h]
                                         [-f {json,shell,table,value,yaml}]
                                         [-c COLUMN] [--noindent]
                                         [--prefix PREFIX]
                                         [--max-width <integer>] [--fit-width]
                                         [--print-empty]
                                         [--extra-property type=<property_type>,name=<property_name>,value=<property_value>]
                                         --type <type> [--max-kbps <max-kbps>]
                                         [--max-burst-kbits <max-burst-kbits>]
                                         [--dscp-mark <dscp-mark>]
                                         [--min-kbps <min-kbps>]
                                         [--min-kpps <min-kpps>]
                                         [--ingress | --egress | --any]
                                         <qos-policy>

Create new Network QoS rule

positional arguments:
  <qos-policy>          QoS policy that contains the rule (name or ID)

options:
  -h, --help            show this help message and exit
  --extra-property type=<property_type>,name=<property_name>,value=<property_value>
                        Additional parameters can be passed using this
                        property. Default type of the extra property is string
                        ('str'), but other types can be used as well.
                        Available types are: 'dict', 'list', 'str', 'bool',
                        'int'. In case of 'list' type, 'value' can be
                        semicolon-separated list of values. For 'dict' value
                        is semicolon-separated list of the key:value pairs.
  --type <type>         QoS rule type (minimum-bandwidth, minimum-packet-rate,
                        dscp-marking, bandwidth-limit)
  --max-kbps <max-kbps>
                        Maximum bandwidth in kbps
  --max-burst-kbits <max-burst-kbits>
                        Maximum burst in kilobits, 0 or not specified means
                        automatic, which is 80% of the bandwidth limit, which
                        works for typical TCP traffic. For details check the
                        QoS user workflow.
  --dscp-mark <dscp-mark>
                        DSCP mark: value can be 0, even numbers from 8-56,
                        excluding 42, 44, 50, 52, and 54
  --min-kbps <min-kbps>
                        Minimum guaranteed bandwidth in kbps
  --min-kpps <min-kpps>
                        Minimum guaranteed packet rate in kpps
  --ingress             Ingress traffic direction from the project point of
                        view
  --egress              Egress traffic direction from the project point of
                        view
  --any                 Any traffic direction from the project point of view.
                        Can be used only with minimum packet rate rule.

output formatters:
  output formatter options

  -f {json,shell,table,value,yaml}, --format {json,shell,table,value,yaml}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated to
                        show multiple columns

json formatter:
  --noindent            whether to disable indenting the JSON

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --prefix PREFIX       add a prefix to all variable names

table formatter:
  --max-width <integer>
                        Maximum display width, <1 to disable. You can also use
                        the CLIFF_MAX_TERM_WIDTH environment variable, but the
                        parameter takes precedence.
  --fit-width           Fit the table to the display width. Implied if --max-
                        width greater than 0. Set the environment variable
                        CLIFF_FIT_WIDTH=1 to always enable
  --print-empty         Print empty table if there is no data to show.
Could not clean up: 'ClientManager' object has no attribute 'session'
