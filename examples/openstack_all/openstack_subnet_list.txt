usage: openstack subnet list [-h] [-f {csv,json,table,value,yaml}] [-c COLUMN]
                             [--quote {all,minimal,none,nonnumeric}]
                             [--noindent] [--max-width <integer>]
                             [--fit-width] [--print-empty]
                             [--sort-column SORT_COLUMN]
                             [--sort-ascending | --sort-descending] [--long]
                             [--ip-version <ip-version>] [--dhcp | --no-dhcp]
                             [--service-type <service-type>]
                             [--project <project>]
                             [--project-domain <project-domain>]
                             [--network <network>] [--gateway <gateway>]
                             [--name <name>] [--subnet-range <subnet-range>]
                             [--subnet-pool <subnet-pool>]
                             [--tags <tag>[,<tag>,...]]
                             [--any-tags <tag>[,<tag>,...]]
                             [--not-tags <tag>[,<tag>,...]]
                             [--not-any-tags <tag>[,<tag>,...]]

List subnets

options:
  -h, --help            show this help message and exit
  --long                List additional fields in output
  --ip-version <ip-version>
                        List only subnets of given IP version in output.
                        Allowed values for IP version are 4 and 6.
  --dhcp                List subnets which have DHCP enabled
  --no-dhcp             List subnets which have DHCP disabled
  --service-type <service-type>
                        List only subnets of a given service type in output,
                        for example, network:floatingip_agent_gateway. Must be
                        a valid device owner value for a network port (repeat
                        option to list multiple service types).
  --project <project>   List only subnets which belong to a given project in
                        output (name or ID)
  --project-domain <project-domain>
                        Domain the project belongs to (name or ID). This can
                        be used in case collisions between project names
                        exist.
  --network <network>   List only subnets which belong to a given network in
                        output (name or ID)
  --gateway <gateway>   List only subnets of given gateway IP in output
  --name <name>         List only subnets of given name in output
  --subnet-range <subnet-range>
                        List only subnets of given subnet range (in CIDR
                        notation) in output. For example, --subnet-range
                        10.10.0.0/16
  --subnet-pool <subnet-pool>
                        List only subnets which belong to a given subnet pool
                        in output (name or ID)
  --tags <tag>[,<tag>,...]
                        List subnets which have all given tag(s) (Comma-
                        separated list of tags)
  --any-tags <tag>[,<tag>,...]
                        List subnets which have any given tag(s) (Comma-
                        separated list of tags)
  --not-tags <tag>[,<tag>,...]
                        Exclude subnets which have all given tag(s) (Comma-
                        separated list of tags)
  --not-any-tags <tag>[,<tag>,...]
                        Exclude subnets which have any given tag(s) (Comma-
                        separated list of tags)

output formatters:
  output formatter options

  -f {csv,json,table,value,yaml}, --format {csv,json,table,value,yaml}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated to
                        show multiple columns
  --sort-column SORT_COLUMN
                        specify the column(s) to sort the data (columns
                        specified first have a priority, non-existing columns
                        are ignored), can be repeated
  --sort-ascending      sort the column(s) in ascending order
  --sort-descending     sort the column(s) in descending order

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

json formatter:
  --noindent            whether to disable indenting the JSON

table formatter:
  --max-width <integer>
                        Maximum display width, <1 to disable. You can also use
                        the CLIFF_MAX_TERM_WIDTH environment variable, but the
                        parameter takes precedence.
  --fit-width           Fit the table to the display width. Implied if --max-
                        width greater than 0. Set the environment variable
                        CLIFF_FIT_WIDTH=1 to always enable
  --print-empty         Print empty table if there is no data to show.
Could not clean up: 'ClientManager' object has no attribute 'session'
