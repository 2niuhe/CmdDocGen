usage: openstack image create [-h] [-f {json,shell,table,value,yaml}]
                              [-c COLUMN] [--noindent] [--prefix PREFIX]
                              [--max-width <integer>] [--fit-width]
                              [--print-empty] [--id <id>]
                              [--container-format <container-format>]
                              [--disk-format <disk-format>]
                              [--min-disk <disk-gb>] [--min-ram <ram-mb>]
                              [--file <file> | --volume <volume>] [--force]
                              [--progress] [--sign-key-path <sign-key-path>]
                              [--sign-cert-id <sign-cert-id>]
                              [--protected | --unprotected]
                              [--public | --private | --community | --shared]
                              [--property <key=value>] [--tag <tag>]
                              [--project <project>] [--import]
                              [--project-domain <project-domain>]
                              <image-name>

Create/upload an image

positional arguments:
  <image-name>          New image name

options:
  -h, --help            show this help message and exit
  --id <id>             Image ID to reserve
  --container-format <container-format>
                        Image container format. The supported options are:
                        ami, ari, aki, bare, docker, ova, ovf. The default
                        format is: bare
  --disk-format <disk-format>
                        Image disk format. The supported options are: ami,
                        ari, aki, vhd, vmdk, raw, qcow2, vhdx, vdi, iso,
                        ploop. The default format is: raw
  --min-disk <disk-gb>  Minimum disk size needed to boot image, in gigabytes
  --min-ram <ram-mb>    Minimum RAM size needed to boot image, in megabytes
  --file <file>         Upload image from local file
  --volume <volume>     Create image from a volume
  --force               Force image creation if volume is in use (only
                        meaningful with --volume)
  --progress            Show upload progress bar (ignored if passing data via
                        stdin)
  --sign-key-path <sign-key-path>
                        Sign the image using the specified private key. Only
                        use in combination with --sign-cert-id
  --sign-cert-id <sign-cert-id>
                        The specified certificate UUID is a reference to the
                        certificate in the key manager that corresponds to the
                        public key and is used for signature validation. Only
                        use in combination with --sign-key-path
  --protected           Prevent image from being deleted
  --unprotected         Allow image to be deleted (default)
  --public              Image is accessible and visible to all users
  --private             Image is only accessible by the owner (default until
                        --os-image-api-version 2.5)
  --community           Image is accessible by all users but does not appear
                        in the default image list of any user except the owner
                        (requires --os-image-api-version 2.5 or later)
  --shared              Image is only accessible by the owner and image
                        members (requires --os-image-api-version 2.5 or later)
                        (default since --os-image-api-version 2.5)
  --property <key=value>
                        Set a property on this image (repeat option to set
                        multiple properties)
  --tag <tag>           Set a tag on this image (repeat option to set multiple
                        tags)
  --project <project>   Set an alternate project on this image (name or ID)
  --import              Force the use of glance image import instead of direct
                        upload
  --project-domain <project-domain>
                        Domain the project belongs to (name or ID). This can
                        be used in case collisions between project names
                        exist.

output formatters:
  output formatter options

  -f {json,shell,table,value,yaml}, --format {json,shell,table,value,yaml}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated to
                        show multiple columns

json formatter:
  --noindent            whether to disable indenting the JSON

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --prefix PREFIX       add a prefix to all variable names

table formatter:
  --max-width <integer>
                        Maximum display width, <1 to disable. You can also use
                        the CLIFF_MAX_TERM_WIDTH environment variable, but the
                        parameter takes precedence.
  --fit-width           Fit the table to the display width. Implied if --max-
                        width greater than 0. Set the environment variable
                        CLIFF_FIT_WIDTH=1 to always enable
  --print-empty         Print empty table if there is no data to show.
Could not clean up: 'ClientManager' object has no attribute 'session'
