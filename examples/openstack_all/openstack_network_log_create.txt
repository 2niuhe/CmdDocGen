usage: openstack network log create [-h] [-f {json,shell,table,value,yaml}]
                                    [-c COLUMN] [--noindent] [--prefix PREFIX]
                                    [--max-width <integer>] [--fit-width]
                                    [--print-empty]
                                    [--description <description>]
                                    [--enable | --disable]
                                    [--project <project>]
                                    [--project-domain <project-domain>]
                                    [--event {ALL,ACCEPT,DROP}]
                                    --resource-type <resource-type>
                                    [--resource <resource>]
                                    [--target <target>]
                                    <name>

Create a new network log

positional arguments:
  <name>                Name for the network log

options:
  -h, --help            show this help message and exit
  --description <description>
                        Description of the network log
  --enable              Enable this log
  --disable             Disable this log (default is enabled)
  --project <project>   Owner's project (name or ID)
  --project-domain <project-domain>
                        Domain the project belongs to (name or ID). This can
                        be used in case collisions between project names
                        exist.
  --event {ALL,ACCEPT,DROP}
                        An event to store with log
  --resource-type <resource-type>
                        Network log type(s). You can see supported type(s)
                        with following command:
                        $ openstack network loggable resources list
  --resource <resource>
                        Name or ID of resource (security group or firewall
                        group) that used for logging. You can control for
                        logging target combination with --target option.
  --target <target>     Port (name or ID) for logging. You can control for
                        logging target combination with --resource option.

output formatters:
  output formatter options

  -f {json,shell,table,value,yaml}, --format {json,shell,table,value,yaml}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated to
                        show multiple columns

json formatter:
  --noindent            whether to disable indenting the JSON

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --prefix PREFIX       add a prefix to all variable names

table formatter:
  --max-width <integer>
                        Maximum display width, <1 to disable. You can also use
                        the CLIFF_MAX_TERM_WIDTH environment variable, but the
                        parameter takes precedence.
  --fit-width           Fit the table to the display width. Implied if --max-
                        width greater than 0. Set the environment variable
                        CLIFF_FIT_WIDTH=1 to always enable
  --print-empty         Print empty table if there is no data to show.

This command is provided by the python-neutronclient plugin.
Could not clean up: 'ClientManager' object has no attribute 'session'
