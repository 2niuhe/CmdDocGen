usage: openstack network trunk create [-h] [-f {json,shell,table,value,yaml}]
                                      [-c COLUMN] [--noindent]
                                      [--prefix PREFIX]
                                      [--max-width <integer>] [--fit-width]
                                      [--print-empty]
                                      [--description <description>]
                                      --parent-port <parent-port>
                                      [--subport <port=,segmentation-type=,segmentation-id=>]
                                      [--enable | --disable]
                                      [--project <project>]
                                      [--project-domain <project-domain>]
                                      <name>

Create a network trunk for a given project

positional arguments:
  <name>                Name of the trunk to create

options:
  -h, --help            show this help message and exit
  --description <description>
                        A description of the trunk
  --parent-port <parent-port>
                        Parent port belonging to this trunk (name or ID)
  --subport <port=,segmentation-type=,segmentation-id=>
                        Subport to add. Subport is of form 'port=<name or
                        ID>,segmentation-type=<segmentation-
                        type>,segmentation-id=<segmentation-ID>' (repeat
                        option to add multiple subports)
  --enable              Enable trunk (default)
  --disable             Disable trunk
  --project <project>   Owner's project (name or ID)
  --project-domain <project-domain>
                        Domain the project belongs to (name or ID). This can
                        be used in case collisions between project names
                        exist.

output formatters:
  output formatter options

  -f {json,shell,table,value,yaml}, --format {json,shell,table,value,yaml}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated to
                        show multiple columns

json formatter:
  --noindent            whether to disable indenting the JSON

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --prefix PREFIX       add a prefix to all variable names

table formatter:
  --max-width <integer>
                        Maximum display width, <1 to disable. You can also use
                        the CLIFF_MAX_TERM_WIDTH environment variable, but the
                        parameter takes precedence.
  --fit-width           Fit the table to the display width. Implied if --max-
                        width greater than 0. Set the environment variable
                        CLIFF_FIT_WIDTH=1 to always enable
  --print-empty         Print empty table if there is no data to show.
Could not clean up: 'ClientManager' object has no attribute 'session'
