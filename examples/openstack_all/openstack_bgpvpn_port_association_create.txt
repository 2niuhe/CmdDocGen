usage: openstack bgpvpn port association create [-h]
                                                [-f {json,shell,table,value,yaml}]
                                                [-c COLUMN] [--noindent]
                                                [--prefix PREFIX]
                                                [--max-width <integer>]
                                                [--fit-width] [--print-empty]
                                                [--project <project>]
                                                [--project-domain <project-domain>]
                                                [--advertise-fixed-ips | --no-advertise-fixed-ips]
                                                [--prefix-route prefix=<cidr>[,local_pref=<integer>]]
                                                [--bgpvpn-route bgpvpn=<BGP VPN ID or name>[,local_pref=<integer>]]
                                                <bgpvpn> <port>

Create a BGP VPN port association

positional arguments:
  <bgpvpn>              BGP VPN to apply the port association (name or ID)
  <port>                Port to associate the BGP VPN (name or ID)

options:
  -h, --help            show this help message and exit
  --project <project>   Owner's project (name or ID)
  --project-domain <project-domain>
                        Domain the project belongs to (name or ID). This can
                        be used in case collisions between project names
                        exist.
  --advertise-fixed-ips
                        Fixed IPs of the port will be advertised to the BGP
                        VPN (default)
  --no-advertise-fixed-ips
                        Fixed IPs of the port will not be advertised to the
                        BGP VPN
  --prefix-route prefix=<cidr>[,local_pref=<integer>]
                        Add prefix route in CIDR notation. Optionally, can
                        control the value of the BGP LOCAL_PREF of the routes
                        that will be advertised (repeat option for multiple
                        prefix routes)
  --bgpvpn-route bgpvpn=<BGP VPN ID or name>[,local_pref=<integer>]
                        Add BGP VPN route for route leaking. Optionally, can
                        control the value of the BGP LOCAL_PREF of the routes
                        that will be advertised (repeat option for multiple
                        BGP VPN routes)

output formatters:
  output formatter options

  -f {json,shell,table,value,yaml}, --format {json,shell,table,value,yaml}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated to
                        show multiple columns

json formatter:
  --noindent            whether to disable indenting the JSON

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --prefix PREFIX       add a prefix to all variable names

table formatter:
  --max-width <integer>
                        Maximum display width, <1 to disable. You can also use
                        the CLIFF_MAX_TERM_WIDTH environment variable, but the
                        parameter takes precedence.
  --fit-width           Fit the table to the display width. Implied if --max-
                        width greater than 0. Set the environment variable
                        CLIFF_FIT_WIDTH=1 to always enable
  --print-empty         Print empty table if there is no data to show.

This command is provided by the python-neutronclient plugin.
Could not clean up: 'ClientManager' object has no attribute 'session'
