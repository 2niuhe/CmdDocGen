usage: openstack floating ip list [-h] [-f {csv,json,table,value,yaml}]
                                  [-c COLUMN]
                                  [--quote {all,minimal,none,nonnumeric}]
                                  [--noindent] [--max-width <integer>]
                                  [--fit-width] [--print-empty]
                                  [--sort-column SORT_COLUMN]
                                  [--sort-ascending | --sort-descending]
                                  [--network <network>] [--port <port>]
                                  [--fixed-ip-address <ip-address>]
                                  [--floating-ip-address <ip-address>]
                                  [--long] [--status <status>]
                                  [--project <project>]
                                  [--project-domain <project-domain>]
                                  [--router <router>]
                                  [--tags <tag>[,<tag>,...]]
                                  [--any-tags <tag>[,<tag>,...]]
                                  [--not-tags <tag>[,<tag>,...]]
                                  [--not-any-tags <tag>[,<tag>,...]]

List floating IP(s)

options:
  -h, --help            show this help message and exit
  --network <network>   List floating IP(s) according to given network (name
                        or ID)
  --port <port>         List floating IP(s) according to given port (name or
                        ID)
  --fixed-ip-address <ip-address>
                        List floating IP(s) according to given fixed IP
                        address
  --floating-ip-address <ip-address>
                        List floating IP(s) according to given floating IP
                        address
  --long                List additional fields in output
  --status <status>     List floating IP(s) according to given status
                        ('ACTIVE', 'DOWN')
  --project <project>   List floating IP(s) according to given project (name
                        or ID)
  --project-domain <project-domain>
                        Domain the project belongs to (name or ID). This can
                        be used in case collisions between project names
                        exist.
  --router <router>     List floating IP(s) according to given router (name or
                        ID)
  --tags <tag>[,<tag>,...]
                        List floating IP which have all given tag(s) (Comma-
                        separated list of tags)
  --any-tags <tag>[,<tag>,...]
                        List floating IP which have any given tag(s) (Comma-
                        separated list of tags)
  --not-tags <tag>[,<tag>,...]
                        Exclude floating IP which have all given tag(s)
                        (Comma-separated list of tags)
  --not-any-tags <tag>[,<tag>,...]
                        Exclude floating IP which have any given tag(s)
                        (Comma-separated list of tags)

output formatters:
  output formatter options

  -f {csv,json,table,value,yaml}, --format {csv,json,table,value,yaml}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated to
                        show multiple columns
  --sort-column SORT_COLUMN
                        specify the column(s) to sort the data (columns
                        specified first have a priority, non-existing columns
                        are ignored), can be repeated
  --sort-ascending      sort the column(s) in ascending order
  --sort-descending     sort the column(s) in descending order

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

json formatter:
  --noindent            whether to disable indenting the JSON

table formatter:
  --max-width <integer>
                        Maximum display width, <1 to disable. You can also use
                        the CLIFF_MAX_TERM_WIDTH environment variable, but the
                        parameter takes precedence.
  --fit-width           Fit the table to the display width. Implied if --max-
                        width greater than 0. Set the environment variable
                        CLIFF_FIT_WIDTH=1 to always enable
  --print-empty         Print empty table if there is no data to show.
Could not clean up: 'ClientManager' object has no attribute 'session'
