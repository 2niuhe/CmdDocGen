usage: openstack router create [-h] [-f {json,shell,table,value,yaml}]
                               [-c COLUMN] [--noindent] [--prefix PREFIX]
                               [--max-width <integer>] [--fit-width]
                               [--print-empty]
                               [--extra-property type=<property_type>,name=<property_name>,value=<property_value>]
                               [--enable | --disable]
                               [--distributed | --centralized]
                               [--ha | --no-ha] [--description <description>]
                               [--project <project>]
                               [--project-domain <project-domain>]
                               [--availability-zone-hint <availability-zone>]
                               [--tag <tag> | --no-tag]
                               [--external-gateway <network>]
                               [--fixed-ip subnet=<subnet>,ip-address=<ip-address>]
                               [--enable-snat | --disable-snat]
                               [--enable-ndp-proxy | --disable-ndp-proxy]
                               [--flavor <flavor-id>]
                               [--enable-default-route-bfd]
                               [--disable-default-route-bfd]
                               [--enable-default-route-ecmp]
                               [--disable-default-route-ecmp]
                               [--qos-policy <qos-policy>]
                               <name>

Create a new router

positional arguments:
  <name>                New router name

options:
  -h, --help            show this help message and exit
  --extra-property type=<property_type>,name=<property_name>,value=<property_value>
                        Additional parameters can be passed using this
                        property. Default type of the extra property is string
                        ('str'), but other types can be used as well.
                        Available types are: 'dict', 'list', 'str', 'bool',
                        'int'. In case of 'list' type, 'value' can be
                        semicolon-separated list of values. For 'dict' value
                        is semicolon-separated list of the key:value pairs.
  --enable              Enable router (default)
  --disable             Disable router
  --distributed         Create a distributed router
  --centralized         Create a centralized router
  --ha                  Create a highly available router
  --no-ha               Create a legacy router
  --description <description>
                        Set router description
  --project <project>   Owner's project (name or ID)
  --project-domain <project-domain>
                        Domain the project belongs to (name or ID). This can
                        be used in case collisions between project names
                        exist.
  --availability-zone-hint <availability-zone>
                        Availability Zone in which to create this router
                        (Router Availability Zone extension required, repeat
                        option to set multiple availability zones)
  --tag <tag>           Tag to be added to the router (repeat option to set
                        multiple tags)
  --no-tag              No tags associated with the router
  --external-gateway <network>
                        External Network used as router's gateway (name or ID)
                        (repeat option to set multiple gateways per router if
                        the L3 service plugin in use supports it)
  --fixed-ip subnet=<subnet>,ip-address=<ip-address>
                        Desired IP and/or subnet (name or ID) on external
                        gateway: subnet=<subnet>,ip-address=<ip-address>
                        (repeat option to set multiple fixed IP addresses)
  --enable-snat         Enable Source NAT on external gateway
  --disable-snat        Disable Source NAT on external gateway
  --enable-ndp-proxy    Enable IPv6 NDP proxy on external gateway
  --disable-ndp-proxy   Disable IPv6 NDP proxy on external gateway
  --flavor <flavor-id>  Associate the router to a flavor (by name or ID
  --enable-default-route-bfd
                        Enable BFD sessions for default routes inferred from
                        the external gateway port subnets for this router
  --disable-default-route-bfd
                        Disable BFD sessions for default routes inferred from
                        the external gateway port subnets for this router
  --enable-default-route-ecmp
                        Add ECMP default routes if multiple are available via
                        different gateway ports
  --disable-default-route-ecmp
                        Add default route only for first gateway port
  --qos-policy <qos-policy>
                        Attach QoS policy to router gateway IPs

output formatters:
  output formatter options

  -f {json,shell,table,value,yaml}, --format {json,shell,table,value,yaml}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated to
                        show multiple columns

json formatter:
  --noindent            whether to disable indenting the JSON

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --prefix PREFIX       add a prefix to all variable names

table formatter:
  --max-width <integer>
                        Maximum display width, <1 to disable. You can also use
                        the CLIFF_MAX_TERM_WIDTH environment variable, but the
                        parameter takes precedence.
  --fit-width           Fit the table to the display width. Implied if --max-
                        width greater than 0. Set the environment variable
                        CLIFF_FIT_WIDTH=1 to always enable
  --print-empty         Print empty table if there is no data to show.
Could not clean up: 'ClientManager' object has no attribute 'session'
