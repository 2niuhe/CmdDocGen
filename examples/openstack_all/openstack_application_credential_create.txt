usage: openstack application credential create [-h]
                                               [-f {json,shell,table,value,yaml}]
                                               [-c COLUMN] [--noindent]
                                               [--prefix PREFIX]
                                               [--max-width <integer>]
                                               [--fit-width] [--print-empty]
                                               [--secret <secret>]
                                               [--role <role>]
                                               [--expiration <expiration>]
                                               [--description <description>]
                                               [--unrestricted] [--restricted]
                                               [--access-rules <access-rules>]
                                               <name>

Create new application credential

positional arguments:
  <name>                Name of the application credential

options:
  -h, --help            show this help message and exit
  --secret <secret>     Secret to use for authentication (if not provided, one
                        will be generated)
  --role <role>         Roles to authorize (name or ID) (repeat option to set
                        multiple values)
  --expiration <expiration>
                        Sets an expiration date for the application
                        credential, format of YYYY-mm-ddTHH:MM:SS (if not
                        provided, the application credential will not expire)
  --description <description>
                        Application credential description
  --unrestricted        Enable application credential to create and delete
                        other application credentials and trusts (this is
                        potentially dangerous behavior and is disabled by
                        default)
  --restricted          Prohibit application credential from creating and
                        deleting other application credentials and trusts
                        (this is the default behavior)
  --access-rules <access-rules>
                        Either a string or file path containing a JSON-
                        formatted list of access rules, each containing a
                        request method, path, and service, for example
                        '[{"method": "GET", "path": "/v2.1/servers",
                        "service": "compute"}]'

output formatters:
  output formatter options

  -f {json,shell,table,value,yaml}, --format {json,shell,table,value,yaml}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated to
                        show multiple columns

json formatter:
  --noindent            whether to disable indenting the JSON

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --prefix PREFIX       add a prefix to all variable names

table formatter:
  --max-width <integer>
                        Maximum display width, <1 to disable. You can also use
                        the CLIFF_MAX_TERM_WIDTH environment variable, but the
                        parameter takes precedence.
  --fit-width           Fit the table to the display width. Implied if --max-
                        width greater than 0. Set the environment variable
                        CLIFF_FIT_WIDTH=1 to always enable
  --print-empty         Print empty table if there is no data to show.
Could not clean up: 'ClientManager' object has no attribute 'session'
