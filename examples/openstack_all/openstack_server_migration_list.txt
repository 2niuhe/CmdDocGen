usage: openstack server migration list [-h] [-f {csv,json,table,value,yaml}]
                                       [-c COLUMN]
                                       [--quote {all,minimal,none,nonnumeric}]
                                       [--noindent] [--max-width <integer>]
                                       [--fit-width] [--print-empty]
                                       [--sort-column SORT_COLUMN]
                                       [--sort-ascending | --sort-descending]
                                       [--server <server>] [--host <host>]
                                       [--status <status>] [--type <type>]
                                       [--limit <limit>] [--marker <marker>]
                                       [--changes-since <changes-since>]
                                       [--changes-before <changes-before>]
                                       [--project <project>]
                                       [--project-domain <project-domain>]
                                       [--user <user>]
                                       [--user-domain <user-domain>]

List server migrations

options:
  -h, --help            show this help message and exit
  --server <server>     Filter migrations by server (name or ID)
  --host <host>         Filter migrations by source or destination host
  --status <status>     Filter migrations by status
  --type <type>         Filter migrations by type
  --limit <limit>       The maximum number of entries to return. If the value
                        exceeds the server-defined maximum, then the maximum
                        value will be used.
  --marker <marker>     The first position in the collection to return results
                        from. This should be a value that was returned in a
                        previous request.
  --changes-since <changes-since>
                        List only migrations changed later or equal to a
                        certain point of time. The provided time should be an
                        ISO 8061 formatted time, e.g.
                        ``2016-03-04T06:27:59Z``. (supported with --os-
                        compute-api-version 2.59 or above)
  --changes-before <changes-before>
                        List only migrations changed earlier or equal to a
                        certain point of time. The provided time should be an
                        ISO 8061 formatted time, e.g.
                        ``2016-03-04T06:27:59Z``. (supported with --os-
                        compute-api-version 2.66 or above)
  --project <project>   Filter migrations by project (name or ID) (supported
                        with --os-compute-api-version 2.80 or above)
  --project-domain <project-domain>
                        Domain the project belongs to (name or ID). This can
                        be used in case collisions between project names
                        exist.
  --user <user>         Filter migrations by user (name or ID) (supported with
                        --os-compute-api-version 2.80 or above)
  --user-domain <user-domain>
                        Domain the user belongs to (name or ID). This can be
                        used in case collisions between user names exist.

output formatters:
  output formatter options

  -f {csv,json,table,value,yaml}, --format {csv,json,table,value,yaml}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated to
                        show multiple columns
  --sort-column SORT_COLUMN
                        specify the column(s) to sort the data (columns
                        specified first have a priority, non-existing columns
                        are ignored), can be repeated
  --sort-ascending      sort the column(s) in ascending order
  --sort-descending     sort the column(s) in descending order

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

json formatter:
  --noindent            whether to disable indenting the JSON

table formatter:
  --max-width <integer>
                        Maximum display width, <1 to disable. You can also use
                        the CLIFF_MAX_TERM_WIDTH environment variable, but the
                        parameter takes precedence.
  --fit-width           Fit the table to the display width. Implied if --max-
                        width greater than 0. Set the environment variable
                        CLIFF_FIT_WIDTH=1 to always enable
  --print-empty         Print empty table if there is no data to show.
Could not clean up: 'ClientManager' object has no attribute 'session'
