usage: openstack block storage cleanup [-h] [-f {csv,json,table,value,yaml}]
                                       [-c COLUMN]
                                       [--quote {all,minimal,none,nonnumeric}]
                                       [--noindent] [--max-width <integer>]
                                       [--fit-width] [--print-empty]
                                       [--sort-column SORT_COLUMN]
                                       [--sort-ascending | --sort-descending]
                                       [--cluster <cluster>] [--host <host>]
                                       [--binary <binary>] [--up | --down]
                                       [--disabled | --enabled]
                                       [--resource-id <resource-id>]
                                       [--resource-type <Volume|Snapshot>]
                                       [--service-id SERVICE_ID]

Do block storage cleanup. This command requires ``--os-volume-api-version``
3.24 or greater.

options:
  -h, --help            show this help message and exit
  --cluster <cluster>   Name of block storage cluster in which cleanup needs
                        to be performed (name only)
  --host <host>         Host where the service resides. (name only)
  --binary <binary>     Name of the service binary.
  --up                  Filter by up status. If this is set, services need to
                        be up.
  --down                Filter by down status. If this is set, services need
                        to be down.
  --disabled            Filter by disabled status.
  --enabled             Filter by enabled status.
  --resource-id <resource-id>
                        UUID of a resource to cleanup.
  --resource-type <Volume|Snapshot>
                        Type of resource to cleanup.
  --service-id SERVICE_ID
                        The service ID field from the DB, not the UUID of the
                        service.

output formatters:
  output formatter options

  -f {csv,json,table,value,yaml}, --format {csv,json,table,value,yaml}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated to
                        show multiple columns
  --sort-column SORT_COLUMN
                        specify the column(s) to sort the data (columns
                        specified first have a priority, non-existing columns
                        are ignored), can be repeated
  --sort-ascending      sort the column(s) in ascending order
  --sort-descending     sort the column(s) in descending order

CSV Formatter:
  --quote {all,minimal,none,nonnumeric}
                        when to include quotes, defaults to nonnumeric

json formatter:
  --noindent            whether to disable indenting the JSON

table formatter:
  --max-width <integer>
                        Maximum display width, <1 to disable. You can also use
                        the CLIFF_MAX_TERM_WIDTH environment variable, but the
                        parameter takes precedence.
  --fit-width           Fit the table to the display width. Implied if --max-
                        width greater than 0. Set the environment variable
                        CLIFF_FIT_WIDTH=1 to always enable
  --print-empty         Print empty table if there is no data to show.
Could not clean up: 'ClientManager' object has no attribute 'session'
