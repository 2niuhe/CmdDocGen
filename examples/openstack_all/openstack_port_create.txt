usage: openstack port create [-h] [-f {json,shell,table,value,yaml}]
                             [-c COLUMN] [--noindent] [--prefix PREFIX]
                             [--max-width <integer>] [--fit-width]
                             [--print-empty]
                             [--extra-property type=<property_type>,name=<property_name>,value=<property_value>]
                             --network <network> [--description <description>]
                             [--device <device-id>]
                             [--mac-address <mac-address>]
                             [--device-owner <device-owner>]
                             [--vnic-type <vnic-type>] [--host <host-id>]
                             [--dns-domain dns-domain] [--dns-name <dns-name>]
                             [--numa-policy-required | --numa-policy-preferred | --numa-policy-socket | --numa-policy-legacy]
                             [--hint <alias=value>]
                             [--trusted | --not-trusted]
                             [--fixed-ip subnet=<subnet>,ip-address=<ip-address> | --no-fixed-ip]
                             [--binding-profile <binding-profile>]
                             [--enable | --disable]
                             [--enable-uplink-status-propagation | --disable-uplink-status-propagation]
                             [--project <project>]
                             [--project-domain <project-domain>]
                             [--extra-dhcp-option name=<name>[,value=<value>,ip-version={4,6}]]
                             [--security-group <security-group> | --no-security-group]
                             [--qos-policy <qos-policy>]
                             [--enable-port-security | --disable-port-security]
                             [--allowed-address ip-address=<ip-address>[,mac-address=<mac-address>]]
                             [--device-profile <device-profile>]
                             [--hardware-offload-type <hardware-offload-type>]
                             [--tag <tag> | --no-tag]
                             <name>

Create a new port

positional arguments:
  <name>                Name of this port

options:
  -h, --help            show this help message and exit
  --extra-property type=<property_type>,name=<property_name>,value=<property_value>
                        Additional parameters can be passed using this
                        property. Default type of the extra property is string
                        ('str'), but other types can be used as well.
                        Available types are: 'dict', 'list', 'str', 'bool',
                        'int'. In case of 'list' type, 'value' can be
                        semicolon-separated list of values. For 'dict' value
                        is semicolon-separated list of the key:value pairs.
  --network <network>   Network this port belongs to (name or ID)
  --description <description>
                        Description of this port
  --device <device-id>  Port device ID
  --mac-address <mac-address>
                        MAC address of this port
  --device-owner <device-owner>
                        Device owner of this port. This is the entity that
                        uses the port (for example, network:dhcp).
  --vnic-type <vnic-type>
                        VNIC type for this port (direct | direct-physical |
                        macvtap | normal | baremetal | virtio-forwarder | vdpa
                        | remote-managed) (default: normal)
  --host <host-id>      Allocate port on host <host-id> (ID only)
  --dns-domain dns-domain
                        Set DNS domain to this port (requires dns_domain
                        extension for ports)
  --dns-name <dns-name>
                        Set DNS name for this port (requires DNS integration
                        extension)
  --numa-policy-required
                        NUMA affinity policy required to schedule this port
  --numa-policy-preferred
                        NUMA affinity policy preferred to schedule this port
  --numa-policy-socket  NUMA affinity policy socket to schedule this port
  --numa-policy-legacy  NUMA affinity policy using legacy mode to schedule
                        this port
  --hint <alias=value>  Port hints as ALIAS=VALUE or as JSON. Valid hint
                        aliases/values: ovs-tx-steering=thread, ovs-tx-
                        steering=hash. Valid JSON values are as specified by
                        the Neutron API. (requires port-hints extension)
                        (requires port-hint-ovs-tx-steering extension for
                        alias: ovs-tx-steering) (repeat option to set multiple
                        hints).
  --trusted             Set port to be trusted. This will be populated into
                        the 'binding:profile' dictionary and passed to the
                        services which expect it in this dictionary (for
                        example, Nova).
  --not-trusted         Set port to be not trusted. This will be populated
                        into the 'binding:profile' dictionary and passed to
                        the services which expect it in this dictionary (for
                        example, Nova).
  --fixed-ip subnet=<subnet>,ip-address=<ip-address>
                        Desired IP and/or subnet for this port (name or ID):
                        subnet=<subnet>,ip-address=<ip-address> (repeat option
                        to set multiple fixed IP addresses)
  --no-fixed-ip         No IP or subnet set for this port
  --binding-profile <binding-profile>
                        Custom data to be passed as binding:profile. Data may
                        be passed as <key>=<value> or JSON (repeat option to
                        set multiple binding:profile data).
  --enable              Enable port (default)
  --disable             Disable port
  --enable-uplink-status-propagation
                        Enable uplink status propagation (default)
  --disable-uplink-status-propagation
                        Disable uplink status propagation
  --project <project>   Owner's project (name or ID)
  --project-domain <project-domain>
                        Domain the project belongs to (name or ID). This can
                        be used in case collisions between project names
                        exist.
  --extra-dhcp-option name=<name>[,value=<value>,ip-version={4,6}]
                        Extra DHCP options to be assigned to this port:
                        name=<name>[,value=<value>,ip-version={4,6}] (repeat
                        option to set multiple extra DHCP options)
  --security-group <security-group>
                        Security group to associate with this port (name or
                        ID) (repeat option to set multiple security groups)
  --no-security-group   Associate no security groups with this port
  --qos-policy <qos-policy>
                        Attach QoS policy to this port (name or ID)
  --enable-port-security
                        Enable port security for this port (default)
  --disable-port-security
                        Disable port security for this port
  --allowed-address ip-address=<ip-address>[,mac-address=<mac-address>]
                        Add allowed-address pair associated with this port:
                        ip-address=<ip-address>[,mac-address=<mac-address>]
                        (repeat option to set multiple allowed-address pairs)
  --device-profile <device-profile>
                        Port device profile
  --hardware-offload-type <hardware-offload-type>
                        Hardware offload type this port will request when
                        attached to the network backend
  --tag <tag>           Tag to be added to the port (repeat option to set
                        multiple tags)
  --no-tag              No tags associated with the port

output formatters:
  output formatter options

  -f {json,shell,table,value,yaml}, --format {json,shell,table,value,yaml}
                        the output format, defaults to table
  -c COLUMN, --column COLUMN
                        specify the column(s) to include, can be repeated to
                        show multiple columns

json formatter:
  --noindent            whether to disable indenting the JSON

shell formatter:
  a format a UNIX shell can parse (variable="value")

  --prefix PREFIX       add a prefix to all variable names

table formatter:
  --max-width <integer>
                        Maximum display width, <1 to disable. You can also use
                        the CLIFF_MAX_TERM_WIDTH environment variable, but the
                        parameter takes precedence.
  --fit-width           Fit the table to the display width. Implied if --max-
                        width greater than 0. Set the environment variable
                        CLIFF_FIT_WIDTH=1 to always enable
  --print-empty         Print empty table if there is no data to show.
Could not clean up: 'ClientManager' object has no attribute 'session'
